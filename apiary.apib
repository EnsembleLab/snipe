FORMAT: 1A
HOST: http://private-225f59-sniper1.apiary-mock.com/

# Snipe

Snipe is an API backend for the Snipe Marketplace
> Note: When response is an array, send the `total number of records` and expect a `skip` and `limit` attribute in the payload or query. This is to enable pagination

## Authentication [/auth]

### Register [POST /auth/register] 

+ Request (application/json)

        {
            "firstname": "John",
            "lastname": "Doe",
            "phonenumber": "+2348077788899",
            "email": "john@doe.com",
            "dateofbirth": "2016-03-19",
            "password": "theSafePa$$w0rd$$555//",
            "address line1": "address line 1",
            "address line2": "address line 2",
            "regionorzip": "354662/LGA",
            "state": "Toronto",
            "country": "Nigeria"
        }

+ Response 200 (application/json)
        
        {
            "status": "success",
            "data": {
                "user": {
                    "firstname": "John",
                    "lastname": "Doe",
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                },
                "auth": {
                    "accessToken": "2d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                    "expiry": "3600",
                    "refreshToken": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                    "x-tag": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f/=="
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Reset Password [POST /auth/resetpassword]

+ Request (application/json)

        {
            "email": "john@doe.com",
            "oldPassword": "theSafePa$$w0rd$$555//", // (optional)
            "password": "theSafePa$$w0rd$$555//",
            "confirmPassword": "theSafePa$$w0rd$$555//"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Verification email sent. or Password changed."
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Verify Password Reset [GET /auth/verifyresetpassword/:hash]
Do html redirect to the password reset successful page

+ Parameters
    + hash: "20d3343ae567c8f8a0b9e8f" (string, required) - verification hash from password reset verification email.

+ Response 200 (text/html)

+ Response 400 (text/html)
        
+ Response 503 (text/html)
        
+ Response 404 (text/html)
        
+ Response 500 (text/html)

+ Response 401 (text/html)
        
### Log In [POST]

+ Request (application/json)

        {
            "email": "john@doe.com",
            "password": "theSafePa$$w0rd$$555//",
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "user": {
                    "firstname": "John",
                    "lastname": "Doe",
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                },
                "auth": {
                    "accessToken": "2d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                    "expiry": "3600",
                    "refreshToken": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f",
                    "x-tag": "3d3343ae567c8f8a0b9e8f2d3343ae567c8f8a0b9e8f/=="
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Log Out [GET /auth/logout]
Note: Do html redirect to the password reset successful page and kill the active access token and refresh tokens


+ Response 200 (text/html)

+ Response 400 (text/html)
        
+ Response 503 (text/html)
        
+ Response 404 (text/html)
        
+ Response 500 (text/html)

+ Response 401 (text/html)
        
### Deactivate [GET /auth/deactivate/:user_id]

+ Parameter
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user to be deactivated

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f // This token must be of an administrator or the user to be deactivated

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "User deactivated."
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

## User Management [/users]

### View Users [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com",
                        "validated": false,
                        "address": {
                            "line1": "address line 1",
                            "line2": "address line 2",
                            "ziporregion": "address line 1",
                            "state": "address line 1",
                            "country": "address line 1"
                        }
                    }]
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com",
                        "validated": false,
                        "address": {
                            "line1": "address line 1",
                            "line2": "address line 2",
                            "Zip/region": "address line 1",
                            "state": "address line 1",
                            "country": "address line 1"
                        }
                    }]
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View User [GET /users/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com",
                    "validated": false
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
    
### Update User [PUT /users/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }],
                "products": {
                    "item":"price",
                    "item2":"price",
                    "item3":"price",
                    "item4":"price",
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Filter Users [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + email: "foo@joo.com" (String)  - Email of the user
    + firstname: "Foo" (String)  - First name of the user
    + lastname: "John" (String)  - Last name of the user
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end
    + role: "worker" (Role)  - Role of the user

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com"
                    }]
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com"
                    }]
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Export Users [GET /users/export]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + email: "foo@joo.com" (String)  - Email of the user
    + firstname: "Foo" (String)  - First name of the user
    + lastname: "John" (String)  - Last name of the user
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (text/csv)

+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Invite Friends [GET /users/invite]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Request (application/json)

        [
            {
                "email": "john@doe.com"
            },
            {
                "email": "john2@doe.com"
            }
        ]

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Invitation sent."
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## File Management [/files]
        
### View User Files [GET /files/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "url": "https://foo.com/asset.png"
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "url": "https://foo.com/asset.png"
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View User File [GET /files/:user_id/:file_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View File [GET /files/:user_id/:file_id/file]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + user_id: "2d3343ae567c8f8a0b9e8f" (String, required) - The id of the user
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View Files [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "url": "https://foo.com/asset.png"
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "url": "https://foo.com/asset.png"
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add User File [POST]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Request (application/json)

        {
            "url": "https://foo.com/asset.png"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Update User File [PUT /files/:file_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 

+ Parameters
    + file_id: "5d3343ae567c8f8a0b9e8f" (String, required) - The id of the file

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "url": "https://foo.com/asset.png"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Notifications [/notifications]
        
### View Notifications [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "content": "This is a message",
                    "destination": "fio@yahoo.com",
                    "type": "email",
                    "is_opened": true
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "content": "this is another message",
                    "destination": "3456789876533",
                    "type": "push",
                    "is_opened": false
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Send Notification [POST /notifications]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Request (application/json)

        {
            "content": "This is a message",
            "destination": "fio@yahoo.com",
            "type": "email"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "content": "This is a message",
                "destination": "fio@yahoo.com",
                "type": "email",
                "is_opened": true
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View Notification [GET /notifications/:notification_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + notification_id: "10" (Number) - ID if notification to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "content": "This is a message",
                "destination": "fio@yahoo.com",
                "type": "email",
                "is_opened": true
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Bookings [/bookings]

### View booking payments [GET /bookings/:booking_id/payments]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Parameters
    + booking_id: "10" (Number)  - ID of the booking

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "booking_id": "dd3343ae567c8f8a0b9e8f",
                    "amount": 4000,
                    "user_id": "dd3343ae567c8f8a0b9e8f",
                    "fee": 20,
                    "status": "completed",
                    "provider_response": {}
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "booking_id": "dd3343ae567c8f8a0b9e8f",
                    "amount": 4000,
                    "user_id": "dd3343ae567c8f8a0b9e8f",
                    "fee": 20,
                    "status": "pending",
                    "provider_response": {}
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### View Bookings [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "products":[],
                        "statu": "pending",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "products":[],
                        "statu": "completed",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "products":[],
                        "statu": "canceled",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "products":[],
                        "statu": "ongoing",
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
            
### View Booking [GET /bookings/:booking_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "amount": 2000,
                "data": {
                    "kitchen": 1,
                    "livingRoom": 1,
                    "bedroom": 3,
                    "bathroom": 1,
                    "cupboard": 1
                },
                "products":[],
                "statu": "ongoing",
                "payments": [
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "completed",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    },
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "pending",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    }
                    {
                        "user_id": "2d3343ae567c8f8a0b9e8f",
                        "amount": 2000,
                        "fee": 20,
                        "providerFee": 10,
                        "status": "processing",
                        "provider_response": {
                            "statusCode": "00",
                            "message": "successful"
                        }
                    }
                ]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Complete Booking [POST /bookings/:booking_id/complete]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message":"Booking Completed"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Cancel Booking [POST /bookings/:booking_id/cancel]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message":"Booking Canceled"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Filter Bookings [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + amount: 2000 (String)  - Amount of a booking
    + status: "completed" (String)  - Status of a booking
    + assigned_to: "f2dd3343ae567c8f8a0b9e8f" (String)  - The ID of the user which the booking is assigned to.
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end
    + assignedWorkerID: "dd3343ae567c8f8a0b9e8f" (Number) - The id of the assigned worker

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "pending",
                        "products":[],
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "completed",
                        "products":[],
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "canceled",
                        "products":[],
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "amount": 2000,
                        "data": {
                            "kitchen": 1,
                            "livingRoom": 1,
                            "bedroom": 3,
                            "bathroom": 1,
                            "cupboard": 1
                        },
                        "statu": "ongoing",
                        "products":[],
                        "payments": [
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "completed",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            },
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "pending",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                            {
                                "user_id": "2d3343ae567c8f8a0b9e8f",
                                "amount": 2000,
                                "fee": 20,
                                "providerFee": 10,
                                "status": "processing",
                                "provider_response": {
                                    "statusCode": "00",
                                    "message": "successful"
                                }
                            }
                        ]
                    }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### New Booking [POST]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Request (application/json)

        {
            "amount": 2000,
            "data": {
                "kitchen": 1,
                "livingRoom": 1,
                "bedroom": 3,
                "bathroom": 1,
                "cupboard": 1
            },
            "products":[],
            "offline": true
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "amount": 2000,
                "data": {
                    "kitchen": 1,
                    "livingRoom": 1,
                    "bedroom": 3,
                    "bathroom": 1,
                    "cupboard": 1
                },
                "statu": "pending",
                "payments": []
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Copy Booking [POST /bookings/:booking_id/copy]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to copy

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "amount": 2000,
                "data": {
                    "kitchen": 1,
                    "livingRoom": 1,
                    "bedroom": 3,
                    "bathroom": 1,
                    "cupboard": 1
                },
                "status": "pending",
                "payments": []
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
 
### Refund Booking [POST /bookings/:booking_id/refund]
Refunds should go to the customers wallet's balance, so he can use it for another booking

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + booking_id: "10" (Number) - ID of booking to refund
    
+ Request (application/json)
        
        {
            "products": []
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Booking successfully refunded."
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
       
### Stop Booking Reminder [POST /bookings/:booking_id/stopreminder]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + booking_id: "10" (Number) - ID of the booking

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Reminder disabled for this booking"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Assign Worker to Booking [POST /bookings/:booking_id/assign]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + booking_id: "10" (Number) - ID of the booking
    
+ Request (application/json)

        {
            "worker_id": dd3343ae567c8f8a0b9e8f
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "data": {
                    "kitchen": 1,
                    "livingRoom": 1,
                    "bedroom": 3,
                    "bathroom": 1,
                    "cupboard": 1
                },
                "status": "ongoing",
                "payments": [],
                "assignedTo": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com"
                    }]
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Export Bookings [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + amount: 2000 (String)  - Amount of a booking
    + status: "completed" (String)  - Status of a booking
    + id: "f2dd3343ae567c8f8a0b9e8f" (String)  - ID of a booking
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (text/csv)

+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Recommend Worker for a Booking [GET /booking/:booking_id/recommendworker]
Check if the Worker matches some tags on the booking and worker is not assigned for the time slot ( eg. the state and LGA of the booking), then arrange the workers by rating. High rating first

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + booking_id: "10" (Number)  - ID of the booking
    
+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "firstname": "John",
                        "lastname": "Doe",
                        "addressBook": [{
                            "phonenumber": "+2348077788899",
                            "email": "john@doe.com"
                        }]
                    }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get Customer Details for a Booking [GET /booking/:booking_id/customerdetails]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number)  - ID of the booking

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get Workers Details for a Booking [GET /booking/:booking_id/workersdetails]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number)  - ID of the booking
    + skip: "10" (Number) - Number of records to skip
    + limit: "10" (Number) - Number of records to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com"
                    }]
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "firstname": "John",
                    "lastname": "Doe",
                    "addressBook": [{
                        "phonenumber": "+2348077788899",
                        "email": "john@doe.com"
                    }]
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Rate and Write a Review for a Booking [POST /booking/:booking_id/review]
Add the rating and review to each worker assigned to the project

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number)  - ID of the booking
    
+ Request (application/json)
    
    {
        "rating": 5,
        "review": "This is a review for this good service"
    }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Review has been added successful."
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Pay Worker for Bookings [POST /booking/:booking_id/payworker]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f 
    
+ Parameters
    + booking_id: "10" (Number)  - ID of the booking

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "message": "Review has been added successful.",
                "amountPaid": 5000
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Payments [/payments]

### Initiate Payment for a Booking [POST]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Request (application/json)

        {
            "booking_id": "dd3343ae567c8f8a0b9e8f",
            "amount": 4000
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "booking_id": "dd3343ae567c8f8a0b9e8f",
                "amount": 4000,
                "user_id": "dd3343ae567c8f8a0b9e8f",
                "fee": 20,
                "status": "pending",
                "provider_response": {}
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Complete Payment for a Booking [POST /payments/:payment_id/complete]
Remember to requery the transaction to confirm the true state from the processor

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Parameters
    + payment_id: "10" (Number)  - ID of the payment

+ Request (application/json)

        {
            "status": "completed or failed"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "booking_id": "dd3343ae567c8f8a0b9e8f",
                "amount": 4000,
                "user_id": "dd3343ae567c8f8a0b9e8f",
                "fee": 20,
                "status": "completed",
                "provider_response": {}
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View users payments [GET /payments]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Parameters
    + user_id: "10" (Number)  - ID of the user
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + status: "completed" (String)  - Status of a booking
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "booking_id": "dd3343ae567c8f8a0b9e8f",
                    "amount": 4000,
                    "user_id": "dd3343ae567c8f8a0b9e8f",
                    "fee": 20,
                    "status": "completed",
                    "provider_response": {}
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "booking_id": "dd3343ae567c8f8a0b9e8f",
                    "amount": 4000,
                    "user_id": "dd3343ae567c8f8a0b9e8f",
                    "fee": 20,
                    "status": "pending",
                    "provider_response": {}
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Reporting [/reporting]
        
### View Report [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + duration "weekly" (String) - duration of report
    + type "customers or transactions or workers" (String) - Type of report
    + date "2017-03-04" (Date) - Reporting date
    + limit "10" (Number) - Number of records to return
    + skip "0" (Number) - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "generateddate": "2017-03-02",
                    "value": 4000,
                    "volume": 20,
                    "revenue": 20,
                    "customername": "Akpan Uche", // Optional
                    "workername": "Ngozi Emeka" // Optional
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "generateddate": "2017-03-02",
                    "value": 4000,
                    "volume": 20,
                    "revenue": 20,
                    "customername": "Akpan Uche", // Optional
                    "workername": "Ngozi Emeka" // Optional
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "generateddate": "2017-03-02",
                    "value": 4000,
                    "volume": 20,
                    "revenue": 20,
                    "customername": "Akpan Uche", // Optional
                    "workername": "Ngozi Emeka" // Optional
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "generateddate": "2017-03-02",
                    "value": 4000,
                    "volume": 20,
                    "revenue": 20,
                    "customername": "Akpan Uche", // Optional
                    "workername": "Ngozi Emeka" // Optional
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Collaboration [/collaboration]
        
### Invite Team Member [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Request (application/json)

        {
            "firstname": "John",
            "lastname": "Doe",
            "phonenumber": "+2348077788899",
            "email": "john@doe.com",
            "password": "theSafePa$$w0rd$$555//",
            "role_id": ["2d3343ae567c8f8a0b9e8f"]
        }

+ Response 200 (application/json)
        
        {
            "status": "success",
            "data": {
                "firstname": "John",
                "lastname": "Doe",
                "phonenumber": "+2348077788899",
                "email": "john@doe.com",
                "passwordReset": true
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Access Management [/roles]
        
### View Roles [GET]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "rolename": "Admin",
                    "permisions": [{
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "User",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "Authentication",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "Transactions",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    }]
                },
                {
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "rolename": "Public",
                    "permisions": [{
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "User",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "Authentication",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    },
                    {
                        "id": "2d3343ae567c8f8a0b9e8f", 
                        "model": "Transactions",
                        "read": true,
                        "update": false,
                        "create": true,
                        "delete": false
                    }]
                }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Assign Role [POST /roles/:role_id/assign]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role to assign

+ Request (application/json)

        [{
            "user_id": "dd3343ae567c8f8a0b9e8fd"
        },
        {
            "user_id": "e4d3343ae567c8f8a0b9e8f"
        }]

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }],
                "role_id": ["2d3343ae567c8f8a0b9e8f"]
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Unassign Role [POST /roles/:role_id/unassign]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role to assign

+ Request (application/json)

        [{
            "user_id": "dd3343ae567c8f8a0b9e8fd"
        },
        {
            "user_id": "e4d3343ae567c8f8a0b9e8f"
        }]

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "firstname": "John",
                "lastname": "Doe",
                "addressBook": [{
                    "phonenumber": "+2348077788899",
                    "email": "john@doe.com"
                }],
                "role_id": ["2d3343ae567c8f8a0b9e8f"]
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Add New Role [POST /roles]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "rolename": "Admin"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": []
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View Role [GET /roles/:role_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": []
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Update Role [PUT /roles/:role_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role
    
+ Request (application/json)

        {
            "rolename": "SomeOtherName"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": []
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add Permissions to Role [POST /roles/:role_id/addpermission]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role
    
+ Request (application/json)
        { 
            "model": "Transactions",
            "read": true,
            "update": false,
            "create": true,
            "delete": false
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "model": "User",
                    "read": true,
                    "update": false,
                    "create": true,
                    "delete": false
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Update Permissions on Role [PUT /roles/:role_id/updatepermission/:permission_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role
    + permission_id: "20" (Number) - The ID of the permission to update
    
+ Request (application/json)
        { 
            "model": "Transactions",
            "read": true,
            "update": false,
            "create": true,
            "delete": false
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "model": "User",
                    "read": true,
                    "update": false,
                    "create": true,
                    "delete": false
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Remove Permissions From Role [DELETE /roles/:role_id/deletepermission/:permission_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + role_id: "10" (Number) - The ID of the role
    + permission_id: "20" (Number) - The ID of the permission to update

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "rolename": "Admin",
                "permisions": [{
                    "id": "2d3343ae567c8f8a0b9e8f", 
                    "model": "User",
                    "read": true,
                    "update": false,
                    "create": true,
                    "delete": false
                }]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Payment Page [/pay]
        
### Payment Page [GET /pay/:alias]

+ Response 200 (text/html)

+ Response 400 (text/html)
        
+ Response 503 (text/html)
        
+ Response 404 (text/html)
        
+ Response 500 (text/html)

+ Response 401 (text/html)

## Wallets [/wallets]

### Get Wallet Balance [GET /wallets/balance]
If user_id is not provided, get current users wallet balance

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + user_id: "10" (Number) - The ID of the user

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get Current User's Wallet Statement [GET /wallets/me]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + skip: "10" (Number) - Number of records to skip
    + limit: "10" (Number) - Number of records to return

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Get User's Wallet Statement [GET /wallets/user/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + skip: "10" (Number) - Number of records to skip
    + limit: "10" (Number) - Number of records to return
    + user_id: "10" (String) - Id of the user we want to get a statement for

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Credit User's Wallet [POST /wallets/credit]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "amount": 40,
            "description": "Reward for writing this description",
            "user_id": "2d3343ae567c8f8a0b9e8f"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 2000,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Debit User's Wallet [POST /wallets/debit]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "amount": 40,
            "description": "Reward for writing this description",
            "user_id": "2d3343ae567c8f8a0b9e8f"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "balance": 1960,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Products [/products]

### Add New Product [POST /products]
Alias `[POST /users/:user_id/products]` No need to pass `user_id` in JSON payload with this alias

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "name": "A Product",
            "amount": 40,
            "description": "Reward for writing this description",
            "user_id": "2d3343ae567c8f8a0b9e8f",
            "additional_data": {
                "someKey":"a value",
                "anotherKey": "one value"
            }
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Update Product [PUT /products/:product_id] 
Alias `[PUT /users/:user_id/products/:product_id]` No need to pass `user_id` in JSON payload with this alias

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "name": "A Product",
            "amount": 40,
            "description": "Reward for writing this description",
            "user_id": "2d3343ae567c8f8a0b9e8f",
            "additional_data": {
                "someKey":"a value",
                "anotherKey": "one value"
            }
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Delete Product [DELETE /products/:product_id]
Alias `[DELETE /users/:user_id/products/:product_id]` No need to pass `user_id` in JSON payload with this alias

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### View Products [GET /products]
Alias `[GET /users/:user_id/products]` No need to pass `user_id` in JSON payload with this alias

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### Filter Products [GET /products]
Alias `[GET /users/:user_id/products]` No need to pass `user_id` in JSON payload with this alias

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + amount: 2000 (String)  - Amount of a product
    + name: "Some Name" (String)  - Status of a product
    + description: "Some Description" (String)  - description of a product
    + rangeFrom: "2017-03-01" (Date)  - Date range start
    + rangeTo: "2017-03-15" (Date)  - Date range end

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }

### View Product [GET /products/:product_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                },
                "categories":[]
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Categories [/categories]

### Add New Category [POST /categories]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "name": "A Category",
            "is_featured": true
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Category",
                "slug": "a_category",
                "is_featured": true
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Update Category [PUT /categories]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "name": "A Modified Category",
            "is_featured": false
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category",
                "is_featured": false
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Delete Category [DELETE /categories/:category_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "F3dd3343ae567c8f8a0b9e8f" (Number) - Id of the category to be deleted

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
        
### View Category [GET /categories/:category_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "F3dd3343ae567c8f8a0b9e8f" (Number) - Id of the category to be deleted

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category",
                "is_featured": true
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View Categories [GET /categories]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip
    + featured: true (Boolean) - If this call should return only featured categories.

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category"
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category"
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Modified Category",
                "slug": "a_modified_category"
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### View Category Products [GET /categories/:category_id/products]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "F3dd3343ae567c8f8a0b9e8f" (Number) - Id of the category
    + limit: "10" (Number) - Number of records to return
    + skip: "0" (Number)  - Number of records to skip

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }],
            "total": 200,
            "limit": 10,
            "skip": 20
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add Products to Category [POST /categories/:category_id/products]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "F3dd3343ae567c8f8a0b9e8f" (Number) - Id of the category
    
+ Request (application/json)

        ["F3dd3343ae567c8f8a0b9e8f","F3dd3343ae567c8f8a0b9e8f"] // Product IDs

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Remove Products from Category [DELETE /categories/:category_id/products]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "F3dd3343ae567c8f8a0b9e8f" (Number) - Id of the category
    
+ Request (application/json)

        ["F3dd3343ae567c8f8a0b9e8f","F3dd3343ae567c8f8a0b9e8f"] // Product IDs

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            },{
                "id": "2d3343ae567c8f8a0b9e8f", 
                "name": "A Product",
                "amount": 40,
                "description": "Reward for writing this description",
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "additional_data": {
                    "someKey":"a value",
                    "anotherKey": "one value"
                }
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
## Fees [/fees]

### Add New User Fee [POST /fee/user]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "flat", // can be flat or a percentage
            "value": 100,
            "user_id": "2d3343ae567c8f8a0b9e8f"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get User Fees [GET /fee/user/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + user_id: "dd67ac34ff6da23effdc89" (String) - The user id of the user we want to get fees for.

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Remove a Fee [DELETE /fee/:fee_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + fee_id: "dd55fa76ce87cc78deffc3" (String) - Id of the fee to be deleted

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add New Product Fee [POST /fee/product]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "flat", // can be flat or a percentage
            "value": 100,
            "product_id": "2d3343ae567c8f8a0b9e8f"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "product_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get Product Fees [GET /fee/product/:product_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + product_id: "dd55ee66ad77fd54ae32" (String) - Id of the product we want to get a fee for

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "product_id": "2d3343ae567c8f8a0b9e8f"
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add New Category Fee [POST /fee/category]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "flat", // can be flat or a percentage
            "value": 100,
            "category_id": "2d3343ae567c8f8a0b9e8f"
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "category_id": "2d3343ae567c8f8a0b9e8f"
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
        
### Get Category Fees [GET /fee/category/:category_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "dd66af76de43ff3caed5f" (String) - Id of the category we are getting fees for

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "flat", // can be flat or a percentage
                "value": 100,
                "category_id": "2d3343ae567c8f8a0b9e8f"
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        

## Limits [/limits]

### Add New User Limit [POST /limits/user]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
            "value": 100,
            "user_id": "2d3343ae567c8f8a0b9e8f",
            "priority": 1
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get User Limits [GET /limits/user/:user_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + user_id: "dd67ac34ff6da23effdc89" (String) - The user id of the user we want to get fees for.

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Remove a Limit [DELETE /limits/:limit_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + limit_id: "dd55fa76ce87cc78deffc3" (String) - Id of the limit to be deleted

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "user_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add New Product Limit [POST /limits/product]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
            "value": 100,
            "product_id": "2d3343ae567c8f8a0b9e8f",
            "priority": 1
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "product_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Get Product Limits [GET /limits/product/:product_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + product_id: "dd55ee66ad77fd54ae32" (String) - Id of the product we want to get a fee for

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "product_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
### Add New Category Limit [POST /limits/category]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Request (application/json)

        {
            "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
            "value": 100,
            "category_id": "2d3343ae567c8f8a0b9e8f",
            "priority": 1
        }

+ Response 200 (application/json)

        {
            "status": "success",
            "data": {
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "category_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }
        
        
### Get Category Limits [GET /limits/category/:category_id]

+ Headers
    Authorization: dd3343ae567c8f8a0b9e8f
    
+ Parameters
    + category_id: "dd66af76de43ff3caed5f" (String) - Id of the category we are getting fees for

+ Response 200 (application/json)

        {
            "status": "success",
            "data": [{
                "id": "6d3343ae567c8f8a0b9e8f",
                "type": "daily_limit", // can be a daily_limit or a per_transaction_limit
                "value": 100,
                "categoryFee_id": "2d3343ae567c8f8a0b9e8f",
                "priority": 1
            }]
        }
        
+ Response 400 (application/json)
        
        {
            "status": "error",
            "message": "bad request", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 503 (application/json)
        
        {
            "status": "error",
            "message": "forbidden", // May come with a more detailed message sometimes
            "data": {}
        }
        
+ Response 404 (application/json)
        
        {
            "status": "error",
            "message": "not found"
        }
        
+ Response 500 (application/json)
        
        {
            "status": "error",
            "message": "server error", // May come with a more detailed message sometimes
            "data": {}
        }

+ Response 401 (application/json)
        
        {
            "status": "error",
            "message": "unauthorized", // May come with a more detailed message sometimes
            "data": {}
        }